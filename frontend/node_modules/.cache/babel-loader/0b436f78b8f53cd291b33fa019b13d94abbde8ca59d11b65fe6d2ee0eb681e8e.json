{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sotez\\\\Desktop\\\\kamrul\\\\task-manager\\\\frontend\\\\src\\\\components\\\\auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const navigate = useNavigate(); // ✅ Initialize navigate\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (password !== confirm) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Reset failed');\n      setSuccess('Password reset successful!');\n\n      // ✅ Redirect after success\n      setTimeout(() => {\n        navigate('/', {\n          replace: true\n        });\n      }, 1000); // Optional: brief delay to show success message\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reset-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"reset\",\n          style: {\n            fontSize: 48,\n            color: '#00c853'\n          },\n          children: \"\\u23F1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reset-desc\",\n        children: \"Strong passwords include numbers, letters, and punctuation marks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirm,\n        onChange: e => setConfirm(e.target.value),\n        required: true,\n        placeholder: \"Retype password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reset-btn\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"+S8uOieTnywI8al0sCg31+Jv0Cw=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","password","setPassword","confirm","setConfirm","error","setError","success","setSuccess","navigate","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","setTimeout","replace","err","className","children","onSubmit","role","style","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/sotez/Desktop/kamrul/task-manager/frontend/src/components/auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom'; // ✅ Import useNavigate\r\nimport './ResetPassword.css';\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const navigate = useNavigate(); // ✅ Initialize navigate\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    if (password !== confirm) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || 'Reset failed');\r\n\r\n      setSuccess('Password reset successful!');\r\n\r\n      // ✅ Redirect after success\r\n      setTimeout(() => {\r\n        navigate('/', { replace: true });\r\n      }, 1000); // Optional: brief delay to show success message\r\n\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <form className=\"reset-form\" onSubmit={handleSubmit}>\r\n        <div className=\"reset-icon\">\r\n          <span role=\"img\" aria-label=\"reset\" style={{ fontSize: 48, color: '#00c853' }}>⏱️</span>\r\n        </div>\r\n        <h2>Reset your Password</h2>\r\n        <p className=\"reset-desc\">Strong passwords include numbers, letters, and punctuation marks.</p>\r\n        \r\n        <label>Email Address</label>\r\n        <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n        \r\n        <label>Enter New Password</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n        \r\n        <label>Confirm Password</label>\r\n        <input type=\"password\" value={confirm} onChange={e => setConfirm(e.target.value)} required placeholder=\"Retype password\" />\r\n        \r\n        {error && <div className=\"reset-error\">{error}</div>}\r\n        {success && <div className=\"reset-success\">{success}</div>}\r\n        \r\n        <button type=\"submit\" className=\"reset-btn\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}