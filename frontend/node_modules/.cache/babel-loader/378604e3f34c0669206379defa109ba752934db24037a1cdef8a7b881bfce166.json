{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shibly\\\\kamrul\\\\frontend\\\\src\\\\components\\\\auth\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [email, setEmail] = useState('m32220@gmail.com');\n  const [password, setPassword] = useState('');\n  const [confirm, setConfirm] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (password !== confirm) {\n      setError('Passwords do not match');\n      return;\n    }\n    try {\n      const res = await fetch('http://localhost:5000/api/auth/reset-password', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await res.json();\n      if (!res.ok) throw new Error(data.message || 'Reset failed');\n      setSuccess('Password reset successful!');\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"reset-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-icon\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          role: \"img\",\n          \"aria-label\": \"reset\",\n          style: {\n            fontSize: 48,\n            color: '#00c853'\n          },\n          children: \"\\u23F1\\uFE0F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset your Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reset-desc\",\n        children: \"Strong passwords include numbers, letters, and punctuation marks.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirm,\n        onChange: e => setConfirm(e.target.value),\n        required: true,\n        placeholder: \"Retype password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reset-success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"reset-btn\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"sspAZojU3dJcYMoIvXDGgHrQyJU=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ResetPassword","_s","email","setEmail","password","setPassword","confirm","setConfirm","error","setError","success","setSuccess","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","ok","Error","message","err","className","children","onSubmit","role","style","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","target","required","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/Shibly/kamrul/frontend/src/components/auth/ResetPassword.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './ResetPassword.css';\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('m32220@gmail.com');\r\n  const [password, setPassword] = useState('');\r\n  const [confirm, setConfirm] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (password !== confirm) {\r\n      setError('Passwords do not match');\r\n      return;\r\n    }\r\n    try {\r\n      const res = await fetch('http://localhost:5000/api/auth/reset-password', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ email, password })\r\n      });\r\n      const data = await res.json();\r\n      if (!res.ok) throw new Error(data.message || 'Reset failed');\r\n      setSuccess('Password reset successful!');\r\n    } catch (err) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-container\">\r\n      <form className=\"reset-form\" onSubmit={handleSubmit}>\r\n        <div className=\"reset-icon\">\r\n          {/* Replace with actual icon if available */}\r\n          <span role=\"img\" aria-label=\"reset\" style={{fontSize: 48, color: '#00c853'}}>⏱️</span>\r\n        </div>\r\n        <h2>Reset your Password</h2>\r\n        <p className=\"reset-desc\">Strong passwords include numbers, letters, and punctuation marks.</p>\r\n        <label>Email Address</label>\r\n        <input type=\"email\" value={email} onChange={e => setEmail(e.target.value)} required />\r\n        <label>Enter New Password</label>\r\n        <input type=\"password\" value={password} onChange={e => setPassword(e.target.value)} required />\r\n        <label>Confirm Password</label>\r\n        <input type=\"password\" value={confirm} onChange={e => setConfirm(e.target.value)} required placeholder=\"Retype password\" />\r\n        {error && <div className=\"reset-error\">{error}</div>}\r\n        {success && <div className=\"reset-success\">{success}</div>}\r\n        <button type=\"submit\" className=\"reset-btn\">Reset Password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}